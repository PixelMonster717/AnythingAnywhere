name: Build

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
    steps:
    - name: Fetch Repo Name
      run: |
        echo "REPO_NAME=$(basename $GITHUB_REPOSITORY)" >> $GITHUB_ENV
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 6.0.X
    - name: Cache .NET dependencies
      uses: actions/cache@v2
      with:
        path: |
          ${{ env.NUGET_PACKAGES }}
          subdir/packages.lock.json
        key: ${{ runner.os }}-dotnet-${{ hashFiles('**/packages.lock.json') }}
    - name: Checkout Common submodule
      uses: actions/checkout@v4
      with:
        repository: Smoked-Fish/Common
        ref: main
        path: Common
    - name: Cache Common
      uses: actions/cache@v2
      with:
        path: Common
        key: ${{ runner.os }}-common-${{ hashFiles('Common/**') }}
    - name: Setup game and SMAPI
      uses: actions/checkout@v4
      with:
        repository: Smoked-Fish/mod-reference-assemblies
        fetch-tags: true
        ref: refs/tags/SDV1.6.8-SMAPI4.0.8
        path: GamePath
    - name: Cache Reference Assemblies
      uses: actions/cache@v2
      with:
        path: GamePath
        key: ${{ runner.os }}-mod-reference-${{ hashFiles('GamePath/**') }}
    - name: Set game path
      run: |
        echo "GamePath=$GITHUB_WORKSPACE/GamePath" >> "$GITHUB_ENV"
        echo "<Project><PropertyGroup><GamePath>$GITHUB_WORKSPACE/GamePath</GamePath></PropertyGroup></Project>" > "$HOME/stardewvalley.targets"
    - name: Restore dependencies
      run: dotnet restore --locked-mode
    - name: Build
      run: dotnet build --no-restore --configuration Release
    - name: Fetch version
      run: |
        echo "MOD_VERSION=$(cat $GITHUB_WORKSPACE/bin/Release/version.txt)" >> $GITHUB_ENV
    - name: Unzip mod
      run: |
        MOD_ZIP_PATH="${{ github.workspace }}/bin/Release/${{ env.REPO_NAME }} ${{ env.MOD_VERSION }}.zip"
        unzip "$MOD_ZIP_PATH" -d Mod
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.REPO_NAME }} ${{ env.MOD_VERSION }}
        path: Mod
